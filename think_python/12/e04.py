def read_words(w):
    """
    Reads all the words from file w and returns an array.
    Also adds 'a', 'I' and '' as possible words.

    w: string

    return: list
    """
    fin = open(w)

    result = list(map(lambda x: x.strip(), fin))

    result.append('a')
    result.append('i')
    result.append('')

    return result

def generate_children(w):
    """
    Generate all possible children of word w. Children are all possible words to be generated by removing a single char.

    w: string

    return: list
    """
    result = []
    for i in range(len(w)):
        a = list(w)
        a.pop(i)
        result.append(''.join(a))
    return result


def is_reducible(children_dict, word):
    if word == '':
        return True
    if word not in children_dict:
        return False

    for child in children_dict[word]:
        if is_reducible(children_dict, child):
            return True
    return False

def main():
    words = read_words('words.txt')
    children_dict = dict(map(lambda x: (x, generate_children(x)), words))
    reducible_words = list(filter(lambda x: is_reducible(children_dict, x), words))
    sorted_words = sorted(reducible_words, key=lambda x: len(x))
    
    print(sorted_words)

if __name__ == '__main__':
    main()
